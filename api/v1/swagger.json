{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API for DixitMe - Online Dixit Card Game\nThis API provides endpoints for managing players, games, and real-time gameplay through WebSocket connections.",
        "title": "DixitMe API",
        "contact": {
            "name": "DixitMe API Support",
            "email": "support@dixitme.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/cards": {
            "get": {
                "description": "Get the list of all available cards in the game",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cards"
                ],
                "summary": "Get available cards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/games": {
            "get": {
                "description": "Get a paginated list of all games with optional status filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "List all games",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "waiting",
                            "in_progress",
                            "completed",
                            "abandoned"
                        ],
                        "type": "string",
                        "description": "Game status filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetGamesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{room_code}": {
            "get": {
                "description": "Get game information and status by room code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get game by room code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Room Code",
                        "name": "room_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetGameResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health status of the API and its dependencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/player/{player_id}/history": {
            "get": {
                "description": "Get paginated game history for a specific player",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get player game history",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Player ID",
                        "name": "player_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.GameHistory"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/player/{player_id}/stats": {
            "get": {
                "description": "Get comprehensive statistics for a specific player",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get player statistics",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Player ID",
                        "name": "player_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/players": {
            "post": {
                "description": "Create a new player with a given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Create a new player",
                "parameters": [
                    {
                        "description": "Player information",
                        "name": "player",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreatePlayerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreatePlayerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/players/{id}": {
            "get": {
                "description": "Get player information by player ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get player by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/models.Player"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreatePlayerRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.CreatePlayerResponse": {
            "type": "object",
            "properties": {
                "player": {
                    "$ref": "#/definitions/models.Player"
                }
            }
        },
        "handlers.GetGameResponse": {
            "type": "object",
            "properties": {
                "game": {
                    "$ref": "#/definitions/models.Game"
                },
                "is_live": {
                    "type": "boolean"
                }
            }
        },
        "handlers.GetGamesResponse": {
            "type": "object",
            "properties": {
                "games": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Game"
                    }
                }
            }
        },
        "models.CardSubmission": {
            "type": "object",
            "properties": {
                "card_id": {
                    "description": "ID of the card from the deck",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "player": {
                    "$ref": "#/definitions/models.Player"
                },
                "player_id": {
                    "type": "string"
                },
                "round": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.GameRound"
                        }
                    ]
                },
                "round_id": {
                    "type": "string"
                }
            }
        },
        "models.Game": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_round": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "max_rounds": {
                    "description": "3 players * 2 rounds each",
                    "type": "integer"
                },
                "players": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GamePlayer"
                    }
                },
                "room_code": {
                    "type": "string"
                },
                "rounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GameRound"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.GameStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.GameHistory": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration in minutes",
                    "type": "integer"
                },
                "game": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Game"
                        }
                    ]
                },
                "game_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "total_rounds": {
                    "type": "integer"
                },
                "winner": {
                    "$ref": "#/definitions/models.Player"
                },
                "winner_id": {
                    "type": "string"
                }
            }
        },
        "models.GamePlayer": {
            "type": "object",
            "properties": {
                "game": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Game"
                        }
                    ]
                },
                "game_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "player": {
                    "$ref": "#/definitions/models.Player"
                },
                "player_id": {
                    "type": "string"
                },
                "position": {
                    "description": "Turn order",
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "models.GameRound": {
            "type": "object",
            "properties": {
                "clue": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "game": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Game"
                        }
                    ]
                },
                "game_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "round_number": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.RoundStatus"
                },
                "storyteller": {
                    "$ref": "#/definitions/models.Player"
                },
                "storyteller_card": {
                    "description": "Card ID chosen by storyteller",
                    "type": "integer"
                },
                "storyteller_id": {
                    "type": "string"
                },
                "submissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CardSubmission"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vote"
                    }
                }
            }
        },
        "models.GameStatus": {
            "type": "string",
            "enum": [
                "waiting",
                "in_progress",
                "completed",
                "abandoned"
            ],
            "x-enum-varnames": [
                "GameStatusWaiting",
                "GameStatusInProgress",
                "GameStatusCompleted",
                "GameStatusAbandoned"
            ]
        },
        "models.Player": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.RoundStatus": {
            "type": "string",
            "enum": [
                "storytelling",
                "submitting",
                "voting",
                "scoring",
                "completed"
            ],
            "x-enum-varnames": [
                "RoundStatusStorytelling",
                "RoundStatusSubmitting",
                "RoundStatusVoting",
                "RoundStatusScoring",
                "RoundStatusCompleted"
            ]
        },
        "models.Vote": {
            "type": "object",
            "properties": {
                "card_id": {
                    "description": "ID of the card they voted for",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "player": {
                    "$ref": "#/definitions/models.Player"
                },
                "player_id": {
                    "type": "string"
                },
                "round": {
                    "description": "Relationships",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.GameRound"
                        }
                    ]
                },
                "round_id": {
                    "type": "string"
                }
            }
        }
    }
}